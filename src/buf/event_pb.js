// @generated by protoc-gen-es v1.10.0
// @generated from file ingestion/v1alpha/event.proto (package ingestion.v1alpha, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3, Timestamp } from "@bufbuild/protobuf";

/**
 * Event represents a every possible ingestion case.
 *
 * @generated from message ingestion.v1alpha.Event
 */
export const Event = /*@__PURE__*/ proto3.makeMessageType(
  "ingestion.v1alpha.Event",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "create_time", kind: "message", T: Timestamp },
    { no: 4, name: "properties", kind: "message", T: EventProperties },
    { no: 5, name: "project_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * Client must set one of the following properties according to the event type.
 *
 * Reserved properties:
 *
 *   - session_open SessionProperties
 *
 *   - message_create: MessageProperties
 *
 *   - session_close: SessionProperties
 *
 *   - user_recognize: UserProperties
 *
 *   - feedback_create: FeedbackProperties
 *
 * @generated from message ingestion.v1alpha.EventProperties
 */
export const EventProperties = /*@__PURE__*/ proto3.makeMessageType(
  "ingestion.v1alpha.EventProperties",
  () => [
    { no: 1, name: "session_properties", kind: "message", T: EventProperties_SessionProperties, oneof: "reserved_properties" },
    { no: 2, name: "message_properties", kind: "message", T: EventProperties_MessageProperties, oneof: "reserved_properties" },
    { no: 3, name: "user_properties", kind: "message", T: EventProperties_UserProperties, oneof: "reserved_properties" },
    { no: 4, name: "feedback_properties", kind: "message", T: EventProperties_FeedbackProperties, oneof: "reserved_properties" },
    { no: 10, name: "custom_properties", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "message", T: EventProperties_CustomPropertyValue} },
  ],
);

/**
 * @generated from message ingestion.v1alpha.EventProperties.SessionProperties
 */
export const EventProperties_SessionProperties = /*@__PURE__*/ proto3.makeMessageType(
  "ingestion.v1alpha.EventProperties.SessionProperties",
  () => [
    { no: 1, name: "session_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "session_title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "session_start_time", kind: "message", T: Timestamp },
    { no: 4, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "assistant_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
  {localName: "EventProperties_SessionProperties"},
);

/**
 * @generated from message ingestion.v1alpha.EventProperties.MessageProperties
 */
export const EventProperties_MessageProperties = /*@__PURE__*/ proto3.makeMessageType(
  "ingestion.v1alpha.EventProperties.MessageProperties",
  () => [
    { no: 1, name: "session_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "message_id_hint", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "message_index_hint", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "message_role", kind: "enum", T: proto3.getEnumType(EventProperties_MessageProperties_Role) },
    { no: 5, name: "message_content", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "message_create_time", kind: "message", T: Timestamp },
  ],
  {localName: "EventProperties_MessageProperties"},
);

/**
 * @generated from enum ingestion.v1alpha.EventProperties.MessageProperties.Role
 */
export const EventProperties_MessageProperties_Role = /*@__PURE__*/ proto3.makeEnum(
  "ingestion.v1alpha.EventProperties.MessageProperties.Role",
  [
    {no: 0, name: "ROLE_UNSPECIFIED", localName: "UNSPECIFIED"},
    {no: 1, name: "ROLE_USER", localName: "USER"},
    {no: 2, name: "ROLE_ASSISTANT", localName: "ASSISTANT"},
  ],
);

/**
 * All fields except user_id are optional but at least one field must be set.
 *
 * @generated from message ingestion.v1alpha.EventProperties.UserProperties
 */
export const EventProperties_UserProperties = /*@__PURE__*/ proto3.makeMessageType(
  "ingestion.v1alpha.EventProperties.UserProperties",
  () => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "user_email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "user_ip", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "user_location", kind: "message", T: EventProperties_UserProperties_Location },
    { no: 5, name: "user_create_time", kind: "message", T: Timestamp },
    { no: 6, name: "user_display_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
  {localName: "EventProperties_UserProperties"},
);

/**
 * @generated from message ingestion.v1alpha.EventProperties.UserProperties.Location
 */
export const EventProperties_UserProperties_Location = /*@__PURE__*/ proto3.makeMessageType(
  "ingestion.v1alpha.EventProperties.UserProperties.Location",
  () => [
    { no: 1, name: "country_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "state", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "city", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
  {localName: "EventProperties_UserProperties_Location"},
);

/**
 * @generated from message ingestion.v1alpha.EventProperties.FeedbackProperties
 */
export const EventProperties_FeedbackProperties = /*@__PURE__*/ proto3.makeMessageType(
  "ingestion.v1alpha.EventProperties.FeedbackProperties",
  () => [
    { no: 1, name: "session_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "message_index_hint", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "feedback_target", kind: "enum", T: proto3.getEnumType(EventProperties_FeedbackProperties_Target) },
    { no: 4, name: "type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
  {localName: "EventProperties_FeedbackProperties"},
);

/**
 * @generated from enum ingestion.v1alpha.EventProperties.FeedbackProperties.Target
 */
export const EventProperties_FeedbackProperties_Target = /*@__PURE__*/ proto3.makeEnum(
  "ingestion.v1alpha.EventProperties.FeedbackProperties.Target",
  [
    {no: 0, name: "TARGET_UNSPECIFIED", localName: "UNSPECIFIED"},
    {no: 1, name: "TARGET_SESSION", localName: "SESSION"},
    {no: 2, name: "TARGET_MESSAGE", localName: "MESSAGE"},
  ],
);

/**
 * @generated from message ingestion.v1alpha.EventProperties.CustomPropertyValue
 */
export const EventProperties_CustomPropertyValue = /*@__PURE__*/ proto3.makeMessageType(
  "ingestion.v1alpha.EventProperties.CustomPropertyValue",
  () => [
    { no: 1, name: "string_value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
  {localName: "EventProperties_CustomPropertyValue"},
);

